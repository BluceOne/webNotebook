name: Deploy
on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    permissions:
      id-token: write # Needed for auth with Deno Deploy
      contents: read # Needed to clone the repository

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      
      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      
      - name: Install pnmp
        run: "corepack enable && corepack prepare pnpm@latest --activate"

      - name: Install dependencies 
        run: pnpm install
    
      - name: Cache builds
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-dist-${{ hashFiles('dist/**/*') }}

      - name: Build
        if: steps.cache.outputs.cache-hit != 'true'  
        run: pnpm docs:build --hash-files

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "funny-shrimp-88"
          entrypoint: "https://deno.land/std/http/file_server.ts" # üìù Update the entrypoint if necessary
          root: "dist" # üìù Update the root if necessary
          args: "--changed-only"